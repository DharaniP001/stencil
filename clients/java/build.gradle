plugins {
    id 'idea'
    id 'java-library'
    id 'maven-publish'
    id 'com.google.protobuf' version '0.8.15'
    id 'io.freefair.lombok' version '5.3.3.3'
    id 'com.palantir.git-version' version '0.12.3'
}

group 'io.odpf'
version gitVersion()

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.6'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.5.1'
    implementation group: 'com.google.guava', name: 'guava', version: '27.0.1-jre'
    implementation group: 'com.timgroup', name: 'java-statsd-client', version: '3.1.0'

    testImplementation group: 'junit', name: 'junit' , version: '4.12'
    testImplementation group: 'com.github.tomakehurst', name: 'wiremock', version: '2.18.0'
    testImplementation group: 'com.google.guava', name: 'guava-testlib', version: '12.0-rc2'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.1.0'
}

protobuf {
    generatedFilesBaseDir = "$projectDir/src/test/generated"
    protoc {
        artifact = "com.google.protobuf:protoc:3.5.1"
    }
    generateProtoTasks {
        all().each { task ->
            task.generateDescriptorSet = true
            task.descriptorSetOptions.includeSourceInfo = false
            task.descriptorSetOptions.includeImports = true
            task.descriptorSetOptions.path = "$projectDir/src/test/resources/__files/descriptors.bin"
        }
    }
}

idea {
    module {
        testSourceDirs += file("$projectDir/src/generated/test/java")
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/odpf/stencil"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }

    publications {
        maven(MavenPublication) {
            pom {
                name = 'Stencil'
                description = 'Library to pull latest proto descriptors from a remote server'
                url = 'https://github.com/odpf/stencil'

                scm {
                    url = 'https://github.com/odpf/stencil.git'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        name = 'Data Engineering'
                        email = 'de@go-jek.com'
                    }
                }
                from components.java
            }
        }
    }
}
